name:           caide
version:        0.1
cabal-version:  >= 1.14
build-type:     Custom
author:         slycelote
license:        BSD3

Flag preferlibcpp
  description: Prefer building with libc++
  default: False

Flag preferlibstdcpp
  description: Prefer building with libstdc++ (takes precedence over PreferLibCPP)
  default: False

Flag cppinliner
  description: Include support for inlining C++ code via libclang
  default: True

executable caide
  build-depends:
                   base >= 4,
                   bytestring >= 0.10.4.0,
                   ConfigFile >= 1.1,
                   HTTP >= 4000.2.11,
                   MissingH >= 1.2,
                   mtl >= 2.1,
                   network >= 2.4.2.2,
                   process >=1.2.0,
                   system-fileio == 0.3.12,
                   system-filepath >= 0.4.9,
                   tagsoup >= 0.13,
                   text >= 1.1.0,
                   uuid >= 1.3,
                   xml >= 1.3
  other-extensions: CPP
  hs-source-dirs:  src
  ghc-options:     -Wall -rtsopts -static
  if flag(cppinliner) {
    cpp-options:   -DCLANG_INLINER
    other-modules:
                   Caide.CPP.CBinding,
                   Caide.CPP.CPP
  }
  include-dirs:    cbits
  extra-lib-dirs:  cbits/build, cbits/clangbuild/out/lib
  default-language: Haskell2010
  main-is:         Main.hs
  other-modules:
                   Caide.Types,
                   Caide.Codeforces.Parser,
                   Caide.Util,
                   Caide.CPP.CPPSimple,
                   Caide.Commands.Init,
                   Caide.Commands.ParseProblem,
                   Caide.Configuration,
                   Caide.Commands.BuildScaffold,
                   Caide.Registry,
                   Caide.Commands.Checkout,
                   Caide.Commands.Make,
                   Caide.Commands.RunTests,
                   Caide.Builders.None,
                   Caide.Builders.Custom,
                   Caide.Features.Codelite,
                   Caide.Features.VisualStudio,
                   Caide.Xml,
                   Caide.TestCases.Types,
                   Caide.Commands.GetOpt
